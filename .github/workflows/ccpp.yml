name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
    steps:
      - uses: actions/checkout@v2
      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan
          source ~/.profile
      - name: Configure
        run: |
          [ ${{ matrix.compiler }} == gcc ] && FLAGS="-DCMAKE_CXX_COMPILER=clang++"
          [ ${{ matrix.compiler }} == clang ] && FLAGS="-DCMAKE_CXX_COMPILER=g++"
          cmake -S ${{ github.workspace }} -B ${{ runner.temp }} ${FLAGS}
      - name: Check Header Dependencies
        run: |
          cmake --build ${{ runner.temp }} --parallel $(nproc) --clean-first
      - name: Compile with Sanitizer
        env:
          CFLAGS:   -Werror -g -pedantic -Wall -Wextra -Wno-ignored-qualifiers -Wconversion -fno-omit-frame-pointer -fsanitize=address
          CXXFLAGS: -Werror -g -pedantic -Wall -Wextra -Wno-ignored-qualifiers -Wconversion -fno-omit-frame-pointer -fsanitize=address
          LDFLAGS:  -Werror -g -pedantic -Wall -Wextra -Wno-ignored-qualifiers -Wconversion -fno-omit-frame-pointer -fsanitize=address
        run: |
          CXXFLAGS="${CXXFLAGS}"
          cmake --build ${{ runner.temp }} --parallel $(nproc) --clean-first
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-2019]
    steps:
      - uses: actions/checkout@v1
      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan
      - name: configure
        run: mkdir build && cd build && cmake ..
      - name: build
        run: cmake --build build --config Debug